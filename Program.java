/*
   Создать наследника реализованного класса ГорячийНапиток с дополнительным полем int температура.
Создать класс ГорячихНапитковАвтомат реализующий 
интерфейс ТорговыйАвтомат и реализовать перегруженный метод getProduct(int name, int volume, int temperature), 
выдающий продукт соответствующий имени, объёму и температуре.
В main проинициализировать несколько ГорячихНапитков и ГорячихНапитковАвтомат и воспроизвести логику, 
заложенную в программе.
Всё вышеуказанное создать согласно принципам ООП, пройденным на семинаре.
 */

/*Домашнее задание
Создать наследника класса Продукта - ГорячийНапиток с дополнительным полем int температура.
Создать класс ГорячихНапитковАвтомат реализующий интерфейс ТорговыйАвтомат и реализовать
перегруженный метод getProduct(int name, int volume, int temperature) выдающий продукт
соответствующий имени, объему и температуре
В main проинициализировать несколько ГорячихНапитков и ГорячихНапитковАвтомат и
воспроизвести логику заложенную в программе
Все вышеуказанное создать согласно принципам ООП пройдённым на семинаре */

package Dzsem1;
/*В main проинициализировать несколько ГорячихНапитков и Avtomatnapitkov и воспроизвести логику, 
заложенную в программе.*/
public class Program {
    public static void main(String[] args) {
        Hotdrink drink1 = new Hotdrink("Чай", 200, 80);
        Hotdrink drink2 = new Hotdrink("Кофе", 120, 70);
        Hotdrink drink3 = new Hotdrink("Какао", 200, 70);

        Avtomathotnapitkov avtomathotnapitkov = new Avtomathotnapitkov();
        Hotdrink product1 = avtomathotnapitkov.getProduct("Чай", 200,80);
        Hotdrink product2 = avtomathotnapitkov.getProduct("Кофе", 120,70);
        Hotdrink product3 = avtomathotnapitkov.getProduct("Какао", 200,70);

          // сюда тоже что то просится( 



    }
}
